name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      JAVA_VERSION: '11'  # Updated from Java 8 to 11 for better compatibility
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      BUILDOZER_VERSION: '1.5.0'  # Specify a stable version

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to v4

      - name: Set up Java
        uses: actions/setup-java@v4  # Updated to v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Python
        uses: actions/setup-python@v5  # Updated to v5
        with:
          python-version: '3.9'
          cache: 'pip'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            git \
            zip \
            unzip \
            build-essential \
            libssl-dev \
            libffi-dev \
            python3-dev \
            autoconf \
            libtool \
            pkg-config \
            zlib1g-dev \
            libncurses5-dev \
            libncursesw5-dev \
            libtinfo5 \
            cmake

      - name: Cache Buildozer global directory
        uses: actions/cache@v4  # Updated to v4
        with:
          path: ~/.buildozer
          key: ${{ runner.os }}-buildozer-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade \
            buildozer==${{ env.BUILDOZER_VERSION }} \
            cython \
            virtualenv \
            wheel \
            setuptools \
            appdirs \
            packaging \
            colorama \
            jinja2 \
            toml

      - name: Set up Android SDK
        run: |
          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O sdk-tools.zip
          unzip sdk-tools.zip -d $ANDROID_SDK_ROOT/cmdline-tools/
          mv $ANDROID_SDK_ROOT/cmdline-tools/cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest
          rm sdk-tools.zip

      - name: Set up Android SDK tools
        run: |
          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH
          
          yes | sdkmanager --licenses --sdk_root=$ANDROID_SDK_ROOT
          sdkmanager --sdk_root=$ANDROID_SDK_ROOT \
            "platform-tools" \
            "platforms;android-33" \
            "build-tools;33.0.2" \
            "ndk;25.2.9519653"

      - name: Build Android APK
        env:
          BUILDOZER_WARN_ON_ROOT: 0
        run: |
          # Clean any previous builds
          buildozer android clean
          
          # Build debug APK
          buildozer android debug

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: bin/*.apk
          retention-days: 14
